<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/PTDBeanDelegate.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/PTDBeanDelegate</TokenIdentifier>
			<Abstract type="html">Delegates of a PTDBean object should implement this protocol. See BeanXcodeWorkspace for more examples.</Abstract>
			<DeclaredIn>PTDBean.h</DeclaredIn>
            
			
			<NodeRef refid="30"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PTDBeanDelegate/bean:error:</TokenIdentifier>
			<Abstract type="html">Send when a generic Bean related errors occurs. This is usually called when invalid parameters are passed to Bean methods.</Abstract>
			<DeclaredIn>PTDBean.h</DeclaredIn>
			
			<Declaration>- (void)bean:(PTDBean *)bean error:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>bean</Name>
					<Abstract type="html">The bean that caused or is related to the error.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">Refer to BeanErrors for the list of error codes</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bean:error:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PTDBeanDelegate/beanDidUpdateArduinoPowerState:</TokenIdentifier>
			<Abstract type="html">Sent in response when a Bean&apos;s ArduinoPowerState has been requested.</Abstract>
			<DeclaredIn>PTDBean.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/PTDBean/readArduinoPowerState</TokenIdentifier>
		<TokenIdentifier>//apple_ref/c/tdef/ArduinoPowerState</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)beanDidUpdateArduinoPowerState:(PTDBean *)bean</Declaration>
			<Parameters>
				<Parameter>
					<Name>bean</Name>
					<Abstract type="html">The Bean whose ArduinoPowerState has been requested.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/beanDidUpdateArduinoPowerState:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PTDBeanDelegate/bean:didProgramArduinoWithError:</TokenIdentifier>
			<Abstract type="html">Sent when a Bean has finished programming it&apos;s Arduino. The programming process was successful when error is nil.</Abstract>
			<DeclaredIn>PTDBean.h</DeclaredIn>
			
			<Declaration>- (void)bean:(PTDBean *)bean didProgramArduinoWithError:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>bean</Name>
					<Abstract type="html">The Bean whose Arduino has been programmed.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">Nil if successful, or an NSError if the programming was unsuccessful. See BeanErrors.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bean:didProgramArduinoWithError:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PTDBeanDelegate/bean:ArduinoProgrammingTimeLeft:withPercentage:</TokenIdentifier>
			<Abstract type="html">Time remaining until the Arduino is finished programming, and percentage of the process is complete.</Abstract>
			<DeclaredIn>PTDBean.h</DeclaredIn>
			
			<Declaration>- (void)bean:(PTDBean *)bean ArduinoProgrammingTimeLeft:(NSNumber *)seconds withPercentage:(NSNumber *)percentageComplete</Declaration>
			<Parameters>
				<Parameter>
					<Name>bean</Name>
					<Abstract type="html">The Bean being programmed</Abstract>
				</Parameter><Parameter>
					<Name>seconds</Name>
					<Abstract type="html">The remaining number of seconds in the programming process</Abstract>
				</Parameter><Parameter>
					<Name>percentageComplete</Name>
					<Abstract type="html">The completion percentage of the programming process, from 0.0 to 1.0.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bean:ArduinoProgrammingTimeLeft:withPercentage:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PTDBeanDelegate/bean:serialDataReceived:</TokenIdentifier>
			<Abstract type="html">Serial data received from a Bean</Abstract>
			<DeclaredIn>PTDBean.h</DeclaredIn>
			
			<Declaration>- (void)bean:(PTDBean *)bean serialDataReceived:(NSData *)data</Declaration>
			<Parameters>
				<Parameter>
					<Name>bean</Name>
					<Abstract type="html">The Bean we&apos;re receiving serial data from</Abstract>
				</Parameter><Parameter>
					<Name>data</Name>
					<Abstract type="html">The data received from the Bean</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bean:serialDataReceived:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PTDBeanDelegate/bean:didUpdateLedColor:</TokenIdentifier>
			<Abstract type="html">Sent in response when a Bean&apos;s LED values are requested</Abstract>
			<DeclaredIn>PTDBean.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/PTDBean/readLedColor</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)bean:(PTDBean *)bean didUpdateLedColor:(UIColor *)color</Declaration>
			<Parameters>
				<Parameter>
					<Name>bean</Name>
					<Abstract type="html">The Bean whose LED color has been requested</Abstract>
				</Parameter><Parameter>
					<Name>color</Name>
					<Abstract type="html">The Bean&apos;s LED color. Alpha channel is always 1.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bean:didUpdateLedColor:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PTDBeanDelegate/bean:didUpdateAccelerationAxes:</TokenIdentifier>
			<Abstract type="html">Sent in response when a Bean&apos;s accelerometer readings are requested</Abstract>
			<DeclaredIn>PTDBean.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/PTDBean/readAccelerationAxes</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)bean:(PTDBean *)bean didUpdateAccelerationAxes:(PTDAcceleration)acceleration</Declaration>
			<Parameters>
				<Parameter>
					<Name>bean</Name>
					<Abstract type="html">the Bean being queried</Abstract>
				</Parameter><Parameter>
					<Name>acceleration</Name>
					<Abstract type="html">A &lt;PTDAcceleration&gt; struct containing 3-axis acceleration values, identical to CMAcceleration

     typedef struct {
     double x;
     double y;
     double z;
     } PTDAcceleration;</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bean:didUpdateAccelerationAxes:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PTDBeanDelegate/beanDidUpdateRSSI:error:</TokenIdentifier>
			<Abstract type="html">Sent in response when a Bean&apos;s RSSI is requested</Abstract>
			<DeclaredIn>PTDBean.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/PTDBean/readRSSI</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)beanDidUpdateRSSI:(PTDBean *)bean error:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>bean</Name>
					<Abstract type="html">The Bean whose RSSI data has been requested.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">Nil if successful, or an NSError if the reading was unsuccessful. See BeanErrors.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/beanDidUpdateRSSI:error:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PTDBeanDelegate/bean:didUpdateTemperature:</TokenIdentifier>
			<Abstract type="html">Sent in response when a Bean&apos;s temperature is requested</Abstract>
			<DeclaredIn>PTDBean.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/PTDBean/readTemperature</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)bean:(PTDBean *)bean didUpdateTemperature:(NSNumber *)degrees_celsius</Declaration>
			<Parameters>
				<Parameter>
					<Name>bean</Name>
					<Abstract type="html">The Bean whose temperature data has been requested.</Abstract>
				</Parameter><Parameter>
					<Name>degrees_celsius</Name>
					<Abstract type="html">The ambient temperature in degrees Celsius</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bean:didUpdateTemperature:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PTDBeanDelegate/beanDidUpdateBatteryVoltage:error:</TokenIdentifier>
			<Abstract type="html">Sent in response when a Bean&apos;s battery or power supply voltage is requested</Abstract>
			<DeclaredIn>PTDBean.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/PTDBean/readBatteryVoltage</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)beanDidUpdateBatteryVoltage:(PTDBean *)bean error:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>bean</Name>
					<Abstract type="html">The Bean whose battery or power supply voltage has been requested</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">Nil if successful, or an NSError if the reading was unsuccessful. See BeanErrors.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/beanDidUpdateBatteryVoltage:error:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PTDBeanDelegate/bean:didUpdateRadioConfig:</TokenIdentifier>
			<Abstract type="html">  Sent in response when a Bean&apos;s PTDBeanRadioConfig is requested.</Abstract>
			<DeclaredIn>PTDBean.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/PTDBean/readRadioConfig</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)bean:(PTDBean *)bean didUpdateRadioConfig:(PTDBeanRadioConfig *)config</Declaration>
			<Parameters>
				<Parameter>
					<Name>bean</Name>
					<Abstract type="html">The Bean whose PTDBeanRadioConfig has been requested</Abstract>
				</Parameter><Parameter>
					<Name>config</Name>
					<Abstract type="html">The radio configuration of the bean, see PTDBeanRadioConfig for more details.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bean:didUpdateRadioConfig:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PTDBeanDelegate/bean:didUpdateScratchBank:data:</TokenIdentifier>
			<Abstract type="html">Sent in response when a Bean&apos;s scratch bank data is requested.</Abstract>
			<DeclaredIn>PTDBean.h</DeclaredIn>
			
			<Declaration>- (void)bean:(PTDBean *)bean didUpdateScratchBank:(NSInteger)bank data:(NSData *)data</Declaration>
			<Parameters>
				<Parameter>
					<Name>bean</Name>
					<Abstract type="html">The Bean whose scratch bank data has been requested.</Abstract>
				</Parameter><Parameter>
					<Name>bank</Name>
					<Abstract type="html">The index of the scratch bank to store data, from 1 to 5.</Abstract>
				</Parameter><Parameter>
					<Name>data</Name>
					<Abstract type="html">Data to be stored in the selected bank. Can be up to 20 bytes.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bean:didUpdateScratchBank:data:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PTDBeanDelegate/bean:didUpdateScratchNumber:withValue:</TokenIdentifier>
			<Abstract type="html">  This method is deprecated. Use [PTDBeanDelegate bean:didUpdateScratchBank:data:] instead. (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; v0.3.2&lt;/span&gt;)</Abstract>
			<DeclaredIn>PTDBean.h</DeclaredIn>
			
			<Declaration>- (void)bean:(PTDBean *)bean didUpdateScratchNumber:(NSNumber *)number withValue:(NSData *)data</Declaration>
			
			
			<Anchor>//api/name/bean:didUpdateScratchNumber:withValue:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PTDBeanDelegate/bean:didUpdateSketchName:dateProgrammed:crc32:</TokenIdentifier>
			<Abstract type="html">Sent in response when information about a Bean&apos;s Arduino sketch is requested</Abstract>
			<DeclaredIn>PTDBean.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/PTDBean/readArduinoSketchInfo</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)bean:(PTDBean *)bean didUpdateSketchName:(NSString *)name dateProgrammed:(NSDate *)date crc32:(UInt32)crc</Declaration>
			<Parameters>
				<Parameter>
					<Name>bean</Name>
					<Abstract type="html">The Bean whose sketch info has been requested.</Abstract>
				</Parameter><Parameter>
					<Name>name</Name>
					<Abstract type="html">The name of the currently programmed sketch</Abstract>
				</Parameter><Parameter>
					<Name>date</Name>
					<Abstract type="html">The date the sketch was programmed</Abstract>
				</Parameter><Parameter>
					<Name>crc</Name>
					<Abstract type="html">The CRC32 of the programmed sketch</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bean:didUpdateSketchName:dateProgrammed:crc32:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
        
        
	</File>
</Tokens>