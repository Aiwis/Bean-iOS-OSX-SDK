<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/PTDBeanManager.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/PTDBeanManager</TokenIdentifier>
			<Abstract type="html">Manages discovery and connection of Beans</Abstract>
			<DeclaredIn>PTDBeanManager.h</DeclaredIn>
            
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/intf/PTDBeanManagerDelegate</TokenIdentifier>
		
	</RelatedTokens>
	
			<NodeRef refid="15"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PTDBeanManager/setDelegate:</TokenIdentifier>
			<Abstract type="html">*  The delegate object for the BeanManager. Assign your class as this delegate to receive delegate messages.</Abstract>
			<DeclaredIn>PTDBeanManager.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/intf/PTDBeanManagerDelegate</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, weak) id&lt;PTDBeanManagerDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="15"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PTDBeanManager/delegate</TokenIdentifier>
			<Abstract type="html">*  The delegate object for the BeanManager. Assign your class as this delegate to receive delegate messages.</Abstract>
			<DeclaredIn>PTDBeanManager.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/intf/PTDBeanManagerDelegate</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, weak) id&lt;PTDBeanManagerDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="15"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PTDBeanManager/delegate</TokenIdentifier>
			<Abstract type="html">*  The delegate object for the BeanManager. Assign your class as this delegate to receive delegate messages.</Abstract>
			<DeclaredIn>PTDBeanManager.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/intf/PTDBeanManagerDelegate</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic, weak) id&lt;PTDBeanManagerDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="15"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PTDBeanManager/setState:</TokenIdentifier>
			<Abstract type="html">The BeanManagerState state of the BeanManager. Tells you if the Bluetooth Adapter is of, off, unknown, etc.</Abstract>
			<DeclaredIn>PTDBeanManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) BeanManagerState state</Declaration>
			
			
			<Anchor>//api/name/state</Anchor>
            <NodeRef refid="15"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PTDBeanManager/state</TokenIdentifier>
			<Abstract type="html">The BeanManagerState state of the BeanManager. Tells you if the Bluetooth Adapter is of, off, unknown, etc.</Abstract>
			<DeclaredIn>PTDBeanManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) BeanManagerState state</Declaration>
			
			
			<Anchor>//api/name/state</Anchor>
            <NodeRef refid="15"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PTDBeanManager/state</TokenIdentifier>
			<Abstract type="html">The BeanManagerState state of the BeanManager. Tells you if the Bluetooth Adapter is of, off, unknown, etc.</Abstract>
			<DeclaredIn>PTDBeanManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) BeanManagerState state</Declaration>
			
			
			<Anchor>//api/name/state</Anchor>
            <NodeRef refid="15"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PTDBeanManager/initWithDelegate:</TokenIdentifier>
			<Abstract type="html">Initializes the BeanManager with a delegate that implements the PTDBeanManagerDelegate protocol.</Abstract>
			<DeclaredIn>PTDBeanManager.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithDelegate:(id&lt;PTDBeanManagerDelegate&gt;)delegate</Declaration>
			<Parameters>
				<Parameter>
					<Name>delegate</Name>
					<Abstract type="html">the delegate for this object</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">an instance of the BeanManager</Abstract></ReturnValue>
			<Anchor>//api/name/initWithDelegate:</Anchor>
            <NodeRef refid="15"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PTDBeanManager/initWithDelegate:stateRestorationIdentifier:</TokenIdentifier>
			<Abstract type="html">Initializes the BeanManager with a delegate that implements the PTDBeanManagerDelegate protocol with state restoration (iOS only).</Abstract>
			<DeclaredIn>PTDBeanManager.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithDelegate:(id&lt;PTDBeanManagerDelegate&gt;)delegate stateRestorationIdentifier:(NSString *)stateRestorationIdentifier</Declaration>
			<Parameters>
				<Parameter>
					<Name>delegate</Name>
					<Abstract type="html">the delegate for this object</Abstract>
				</Parameter><Parameter>
					<Name>stateRestorationIdentifier</Name>
					<Abstract type="html">the CoreBluetooth state restoration identifier</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">an instance of the BeanManager</Abstract></ReturnValue>
			<Anchor>//api/name/initWithDelegate:stateRestorationIdentifier:</Anchor>
            <NodeRef refid="15"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PTDBeanManager/startScanningForBeans_error:</TokenIdentifier>
			<Abstract type="html">Begins scanning for Beans</Abstract>
			<DeclaredIn>PTDBeanManager.h</DeclaredIn>
			
			<Declaration>- (void)startScanningForBeans_error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>error</Name>
					<Abstract type="html">Nil if successful. See BeanErrors for error codes.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startScanningForBeans_error:</Anchor>
            <NodeRef refid="15"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PTDBeanManager/stopScanningForBeans_error:</TokenIdentifier>
			<Abstract type="html">Stops scanning for Beans</Abstract>
			<DeclaredIn>PTDBeanManager.h</DeclaredIn>
			
			<Declaration>- (void)stopScanningForBeans_error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>error</Name>
					<Abstract type="html">Nil if successful. See BeanErrors for error codes.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/stopScanningForBeans_error:</Anchor>
            <NodeRef refid="15"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PTDBeanManager/connectToBean:error:</TokenIdentifier>
			<Abstract type="html">Connects to a Bean</Abstract>
			<DeclaredIn>PTDBeanManager.h</DeclaredIn>
			
			<Declaration>- (void)connectToBean:(PTDBean *)bean error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>bean</Name>
					<Abstract type="html">The Bean to connect to</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">Nil if successful. See BeanErrors for error codes.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/connectToBean:error:</Anchor>
            <NodeRef refid="15"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PTDBeanManager/disconnectBean:error:</TokenIdentifier>
			<Abstract type="html">Disconnects from a Bean</Abstract>
			<DeclaredIn>PTDBeanManager.h</DeclaredIn>
			
			<Declaration>- (void)disconnectBean:(PTDBean *)bean error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>bean</Name>
					<Abstract type="html">The Bean to disconnect from</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">Nil if successful. See BeanErrors for error codes.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/disconnectBean:error:</Anchor>
            <NodeRef refid="15"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PTDBeanManager/disconnectFromAllBeans:</TokenIdentifier>
			<Abstract type="html">Disconnects all connected Beans</Abstract>
			<DeclaredIn>PTDBeanManager.h</DeclaredIn>
			
			<Declaration>- (void)disconnectFromAllBeans:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>error</Name>
					<Abstract type="html">Nil if successful. See BeanErrors for error codes.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/disconnectFromAllBeans:</Anchor>
            <NodeRef refid="15"/>
		</Token>
		
        
        
	</File>
</Tokens>